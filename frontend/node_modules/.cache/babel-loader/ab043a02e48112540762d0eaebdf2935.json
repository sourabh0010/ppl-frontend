{"ast":null,"code":"var _jsxFileName = \"/home/com39/Desktop/PPL/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport LandingPage from \"./screens/landingPage\";\nimport ScrollToTop from \"./components/ScrollToTop\";\nimport Timeline from \"./screens/timeline/Timeline\";\nimport ForgotPassword from \"./screens/ResetPassword\";\nimport SinglePost from \"./screens/timeline/singlepost\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [loggedin, setLoggedIn] = useState(true);\n\n  if (localStorage.getItem(\"id\") || props.isLoggedIn) {}\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(ScrollToTop, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/reset/:token\",\n          component: ForgotPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), localStorage.getItem(\"id\") != null ? /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: Timeline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/:id\",\n            component: SinglePost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: [\"/login\", \"/forgot\", \"/\"],\n          children: /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5TAlBVeXJT/KiynJ8hJqVofQlh4=\");\n\n_c = App;\n\nfunction mapStateToProps(state) {\n  console.log(\"map state is\", state);\n  return {\n    isLoggedIn: state.isLoggedIn\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/com39/Desktop/PPL/frontend/src/App.js"],"names":["React","useState","BrowserRouter","Route","Switch","connect","LandingPage","ScrollToTop","Timeline","ForgotPassword","SinglePost","App","props","loggedin","setLoggedIn","localStorage","getItem","isLoggedIn","mapStateToProps","state","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,OAAOC,UAAP,MAAuB,+BAAvB;;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBb,QAAQ,CAAC,IAAD,CAArC;;AACA,MAAGc,YAAY,CAACC,OAAb,CAAqB,IAArB,KAA8BJ,KAAK,CAACK,UAAvC,EAAkD,CAEjD;;AACD,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,WAAD;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,eAAlB;AAAkC,UAAA,SAAS,EAAER;AAA7C;AAAA;AAAA;AAAA;AAAA,gBADF,EAEKM,YAAY,CAACC,OAAb,CAAqB,IAArB,KAA4B,IAA9B,gBACC,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAsB,YAAA,SAAS,EAAER;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,MAAlB;AAAyB,YAAA,SAAS,EAAEE;AAApC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBAMC,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAE,CAAC,QAAD,EAAW,SAAX,EAAsB,GAAtB,CAAnB;AAAA,iCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAxBQC,G;;KAAAA,G;;AAyBT,SAASO,eAAT,CAAyBC,KAAzB,EAAgC;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BF,KAA3B;AACA,SAAO;AACLF,IAAAA,UAAU,EAAEE,KAAK,CAACF;AADb,GAAP;AAGD;;AACD,eAAeZ,OAAO,CAACa,eAAD,CAAP,CAAyBP,GAAzB,CAAf","sourcesContent":["import React,{useState} from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport \"./App.css\";\nimport LandingPage from \"./screens/landingPage\";\nimport ScrollToTop from \"./components/ScrollToTop\";\nimport Timeline from \"./screens/timeline/Timeline\";\nimport ForgotPassword from \"./screens/ResetPassword\";\n\nimport SinglePost from \"./screens/timeline/singlepost\";\n\nfunction App(props) {\n  const [loggedin,setLoggedIn]=useState(true);\n  if(localStorage.getItem(\"id\") || props.isLoggedIn){\n    \n  }\n  return (\n    <BrowserRouter>\n      <ScrollToTop>\n        <Switch>\n          <Route exact path=\"/reset/:token\" component={ForgotPassword} />\n          {( localStorage.getItem(\"id\")!=null) ? (\n            <Switch>\n              <Route exact path=\"/\" component={Timeline} />\n              <Route exact path=\"/:id\" component={SinglePost}/>\n            </Switch>\n          ) : (\n            <Route exact path={[\"/login\", \"/forgot\", \"/\"]}>\n              <LandingPage />\n            </Route>\n          )}\n        </Switch>\n      </ScrollToTop>\n    </BrowserRouter>\n  );\n}\nfunction mapStateToProps(state) {\n  console.log(\"map state is\",state)\n  return {\n    isLoggedIn: state.isLoggedIn,\n  };\n}\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}