{"ast":null,"code":"import { put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction getUserData(action) {\n  return axios.post(\"http://localhost:3002/auth/\", action.payload);\n}\n\nexport function* getDataAsync(action) {\n  try {\n    console.log(action);\n    const allData = yield call(getUserData, action);\n    yield put({\n      type: 'SET_LOGED_IN_USER_DATA',\n      allData\n    });\n    console.log(allData);\n  } catch (error) {\n    // console.log(error)\n    yield put({\n      type: \"HANDLEERROR\",\n      error\n    });\n  }\n}\nexport function* watchLoggedInUser(action) {\n  yield takeLatest('REQUEST_LOGIN', getDataAsync);\n}","map":{"version":3,"sources":["/home/com39/Desktop/PPL/frontend/src/redux/sagas/Saga.js"],"names":["put","takeLatest","call","axios","getUserData","action","post","payload","getDataAsync","console","log","allData","type","error","watchLoggedInUser"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,WAAT,CAAqBC,MAArB,EAA4B;AACxB,SAAOF,KAAK,CAACG,IAAN,CAAW,6BAAX,EAAyCD,MAAM,CAACE,OAAhD,CAAP;AACH;;AACD,OAAO,UAAUC,YAAV,CAAuBH,MAAvB,EAA+B;AACpC,MAAG;AACCI,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACC,UAAMM,OAAO,GAAG,MAAMT,IAAI,CAACE,WAAD,EAAcC,MAAd,CAA1B;AACC,UAAML,GAAG,CAAC;AAAEY,MAAAA,IAAI,EAAE,wBAAR;AAAiCD,MAAAA;AAAjC,KAAD,CAAT;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AAEL,GAND,CAOA,OAAOE,KAAP,EAAc;AACZ;AACA,UAAMb,GAAG,CAAC;AAAEY,MAAAA,IAAI,EAAC,aAAP;AAAsBC,MAAAA;AAAtB,KAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUC,iBAAV,CAA4BT,MAA5B,EAAoC;AACvC,QAAMJ,UAAU,CAAC,eAAD,EAAkBO,YAAlB,CAAhB;AACH","sourcesContent":["import { put, takeLatest,call } from 'redux-saga/effects'\nimport axios from 'axios'\n\n\nfunction getUserData(action){\n    return axios.post(\"http://localhost:3002/auth/\",action.payload)\n}\nexport function* getDataAsync(action) {\n  try{\n      console.log(action)\n       const allData=  yield call(getUserData, action)\n        yield put({ type: 'SET_LOGED_IN_USER_DATA',allData})\n        console.log(allData)\n\n  }\n  catch (error) {\n    // console.log(error)\n    yield put({ type:\"HANDLEERROR\", error });\n  }\n}\n\nexport function* watchLoggedInUser(action) {\n    yield takeLatest('REQUEST_LOGIN', getDataAsync)\n}"]},"metadata":{},"sourceType":"module"}