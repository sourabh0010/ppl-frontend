{"ast":null,"code":"import { put, takeLatest, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport Url from \"../../util/Config\";\n\nfunction getUserData(action) {\n  return axios.post(`${Url.baseurl}/auth/`, action.payload);\n}\n\nexport function* getDataAsync(action) {\n  try {\n    const userData = yield call(getUserData, action);\n\n    if (!userData) {\n      console.log(\"in saga\", userData);\n    }\n\n    yield put({\n      type: \"SET_LOGED_IN_USER_DATA\",\n      userData\n    });\n  } catch (error) {\n    yield put({\n      type: \"HANDLEERROR\",\n      error\n    });\n  }\n}\nexport function* watchLoggedInUser(action) {\n  yield takeLatest(\"REQUEST_LOGIN\", getDataAsync);\n}","map":{"version":3,"sources":["/home/com39/Desktop/PPL/frontend/src/redux/sagas/Saga.js"],"names":["put","takeLatest","call","axios","Url","getUserData","action","post","baseurl","payload","getDataAsync","userData","console","log","type","error","watchLoggedInUser"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,QAAsC,oBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAC3B,SAAOH,KAAK,CAACI,IAAN,CAAY,GAAEH,GAAG,CAACI,OAAQ,QAA1B,EAAmCF,MAAM,CAACG,OAA1C,CAAP;AACD;;AAED,OAAO,UAAUC,YAAV,CAAuBJ,MAAvB,EAA+B;AACpC,MAAI;AACF,UAAMK,QAAQ,GAAG,MAAMT,IAAI,CAACG,WAAD,EAAcC,MAAd,CAA3B;;AACA,QAAI,CAACK,QAAL,EAAe;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,QAAvB;AACD;;AACD,UAAMX,GAAG,CAAC;AAAEc,MAAAA,IAAI,EAAE,wBAAR;AAAkCH,MAAAA;AAAlC,KAAD,CAAT;AACD,GAND,CAME,OAAOI,KAAP,EAAc;AACd,UAAMf,GAAG,CAAC;AAAEc,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA;AAAvB,KAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUC,iBAAV,CAA4BV,MAA5B,EAAoC;AACzC,QAAML,UAAU,CAAC,eAAD,EAAkBS,YAAlB,CAAhB;AACD","sourcesContent":["import { put, takeLatest, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nimport Url from \"../../util/Config\";\n\nfunction getUserData(action) {\n  return axios.post(`${Url.baseurl}/auth/`, action.payload);\n}\n\nexport function* getDataAsync(action) {\n  try {\n    const userData = yield call(getUserData, action);\n    if (!userData) {\n      console.log(\"in saga\", userData);\n    }\n    yield put({ type: \"SET_LOGED_IN_USER_DATA\", userData });\n  } catch (error) {\n    yield put({ type: \"HANDLEERROR\", error });\n  }\n}\n\nexport function* watchLoggedInUser(action) {\n  yield takeLatest(\"REQUEST_LOGIN\", getDataAsync);\n}\n"]},"metadata":{},"sourceType":"module"}