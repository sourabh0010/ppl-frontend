{"ast":null,"code":"import { put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport Url from \"../../util/Config\";\n\nfunction getUserData(action) {\n  return axios.post(`${Url.baseurl}/auth/`, action.payload);\n}\n\nexport function* getDataAsync(action) {\n  try {\n    const userData = yield call(getUserData, action);\n    console.log(\"in saga\");\n    yield put({\n      type: 'SET_LOGED_IN_USER_DATA',\n      userData\n    });\n  } catch (error) {\n    yield put({\n      type: \"HANDLEERROR\",\n      error\n    });\n  }\n}\nexport function* watchLoggedInUser(action) {\n  yield takeLatest('REQUEST_LOGIN', getDataAsync);\n}","map":{"version":3,"sources":["/home/com39/Desktop/PPL/frontend/src/redux/sagas/Saga.js"],"names":["put","takeLatest","call","axios","Url","getUserData","action","post","baseurl","payload","getDataAsync","userData","console","log","type","error","watchLoggedInUser"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,SAASC,WAAT,CAAqBC,MAArB,EAA4B;AACxB,SAAOH,KAAK,CAACI,IAAN,CAAY,GAAEH,GAAG,CAACI,OAAQ,QAA1B,EAAkCF,MAAM,CAACG,OAAzC,CAAP;AACH;;AAED,OAAO,UAAUC,YAAV,CAAuBJ,MAAvB,EAA+B;AACpC,MAAG;AACE,UAAMK,QAAQ,GAAG,MAAMT,IAAI,CAACG,WAAD,EAAcC,MAAd,CAA3B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACC,UAAMb,GAAG,CAAC;AAAEc,MAAAA,IAAI,EAAE,wBAAR;AAAiCH,MAAAA;AAAjC,KAAD,CAAT;AACL,GAJD,CAKA,OAAOI,KAAP,EAAc;AACZ,UAAMf,GAAG,CAAC;AAAEc,MAAAA,IAAI,EAAC,aAAP;AAAsBC,MAAAA;AAAtB,KAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUC,iBAAV,CAA4BV,MAA5B,EAAoC;AACvC,QAAML,UAAU,CAAC,eAAD,EAAkBS,YAAlB,CAAhB;AACH","sourcesContent":["import { put, takeLatest,call } from 'redux-saga/effects'\nimport axios from 'axios'\n\nimport Url from \"../../util/Config\"\n\nfunction getUserData(action){\n    return axios.post(`${Url.baseurl}/auth/`,action.payload)\n}\n\nexport function* getDataAsync(action) {\n  try{\n       const userData=  yield call(getUserData, action);\n       console.log(\"in saga\",)\n        yield put({ type: 'SET_LOGED_IN_USER_DATA',userData})\n  }\n  catch (error) {\n    yield put({ type:\"HANDLEERROR\", error });\n  }\n}\n\nexport function* watchLoggedInUser(action) {\n    yield takeLatest('REQUEST_LOGIN', getDataAsync)\n}"]},"metadata":{},"sourceType":"module"}